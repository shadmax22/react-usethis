{"version":3,"file":"index.cjs","sources":["../node_modules/js-upsert/dist/js-upsert.js","../src/core/managers/FunctionManager.tsx","../src/setters/setFun.tsx","../src/setters/set.tsx","../src/core/managers/EffectManager.tsx","../src/core/Reducers.tsx","../src/core/Dispatcher.tsx","../src/useThis/useThisInstance.tsx","../src/useThis/useThis.ts"],"sourcesContent":["function h(e) {\n  return e.replace(/[\\[\\]'\"]/g, \"\").split(\".\");\n}\nconst c = (e, t) => {\n  let r = Math.floor(Math.random() * 1e6), o = typeof t == \"string\" ? h(t) : t;\n  return {\n    [\"$$@@@@__upsert_hook_\" + r]: {\n      value: e,\n      index: o ?? null,\n      isFunction: typeof e == \"function\"\n    }\n  };\n};\nc.at = (...e) => {\n  const t = e, r = t.pop();\n  return c(r, t);\n};\nfunction y(e, t, r, o = !1, n, l = []) {\n  const u = t;\n  if (t.length <= 1) {\n    if (t.length > 0)\n      try {\n        return e[t[0]] = o ? r(e[t[0] ?? t]) : r, e;\n      } catch {\n        throw `Setting Failed at index ${t[0]} of [${l.join(\n          \" => \"\n        )}] due to the type ${typeof e}, Only array or object is assignable`;\n      }\n    if (e === null || typeof e != \"object\")\n      throw Error(\n        \"Initial value is not a object, ERROR: INITITAL_VALUE_PARSE_FAILED\"\n      );\n    let f = o ? r(e) : r;\n    if (n.returnType == \"array\")\n      return e.push(f), e;\n    if (typeof f != \"object\")\n      throw `Object or array can be setted only as a default value. Type of value is ${typeof f}.`;\n    for (const s of Object.keys(f))\n      e[s] = f[s];\n    return e;\n  }\n  let i = (e ?? [])[t[0]] ?? !1;\n  if (!i) {\n    let f = p(t, r, o);\n    try {\n      e[t[0]] = f;\n    } catch {\n      throw `Setting Failed at index ${t[0]} of [${l.join(\n        \" => \"\n      )}] due to the type ${typeof e}, Only array or object is assignable`;\n    }\n    return e;\n  }\n  return t.shift(), y(i, t, r, o, n, [\n    ...l,\n    u[0]\n  ]);\n}\nfunction p(e, t, r = !1) {\n  let o = [...e], n;\n  return o.length == 1 ? n = r ? t(null) : t : (n = {}, o.shift(), n[o[0]] = p(o, t, r)), n;\n}\nfunction a({ obj: e }, t, r = [], o = !1) {\n  let n = [];\n  for (let l in e) {\n    let u = e[l];\n    if (l.includes(t) && (u ?? !1))\n      n.push({\n        index: [...r, ...u.index ?? []],\n        value: u.value,\n        isFunction: u.isFunction\n      });\n    else if (typeof u == \"object\") {\n      const i = a(\n        { obj: u },\n        t,\n        [...r, l],\n        !0\n      );\n      n = n.concat(i.obj);\n    }\n  }\n  return o ? { obj: n } : {\n    result: n\n  };\n}\nfunction _(e, t, r = { returnType: \"object\" }) {\n  let { result: o } = a({ obj: t }, \"$$@@@@__upsert_hook\");\n  for (let n = 0; n < o.length; n++) {\n    let l = o[n];\n    y(\n      e,\n      l.index,\n      l.value,\n      l.isFunction,\n      r\n    );\n  }\n}\nfunction b(e, ...t) {\n  let r = {\n    returnType: \"object\"\n  };\n  const o = Array.isArray(e);\n  o && (r.returnType = \"array\");\n  for (let n of t)\n    _(e, n, r);\n  try {\n    return new Proxy(e, {\n      get(n, l, u) {\n        return n = o ? [...e] : { ...e }, l === \"get\" ? () => u : l === \"at\" ? (...i) => {\n          if (i.length <= 1)\n            throw \"keys.length is less than 2, need atleast 2 values to differentiate index and value\";\n          const f = i[i.length - 1], s = i;\n          return s.pop(), y(\n            e,\n            s,\n            f,\n            typeof f == \"function\",\n            r\n          ), u;\n        } : Reflect.get(n, l, u);\n      }\n    });\n  } catch {\n    throw Error(\n      `Cannot return value as returnType '${r.returnType}'. Please try '${r.returnType == \"array\" ? \"OBJECT\" : \"ARRAY\"}' returnType, ERROR: RETURN_ERROR.`\n    );\n  }\n}\nexport {\n  c as set,\n  b as upsert\n};\n","type FunctionStore = {\r\n  [key: string]: Function;\r\n};\r\n\r\nconst function_collection: FunctionStore = {};\r\nlet functionIdCounter = 0;\r\n\r\nexport let FunctionManager = {\r\n  collection: {},\r\n} as {\r\n  collection: {\r\n    store: (func: Function) => string;\r\n    retrive: (id: string) => Function;\r\n    get: Object;\r\n  };\r\n  store: (obj: unknown) => unknown;\r\n  fetch: (obj: Object) => Object;\r\n};\r\n\r\nFunctionManager.collection.store = (func: Function) => {\r\n  const id = `__func_${functionIdCounter++}__`;\r\n  function_collection[id] = func;\r\n\r\n  return id;\r\n};\r\nFunctionManager.collection.retrive = (id: string) => {\r\n  return function_collection[id];\r\n};\r\nFunctionManager.collection.get = () => {\r\n  return function_collection;\r\n};\r\n\r\nFunctionManager.store = (obj: any): any => {\r\n  if (typeof obj === \"function\") {\r\n    return FunctionManager.collection.store(obj);\r\n  } else if (Array.isArray(obj)) {\r\n    return obj.map(FunctionManager.store);\r\n  } else if (obj !== null && typeof obj === \"object\") {\r\n    return Object.keys(obj).reduce((acc, key) => {\r\n      acc[key] = FunctionManager.store(obj[key]);\r\n      return acc;\r\n    }, {} as any);\r\n  }\r\n  return obj;\r\n};\r\n\r\nFunctionManager.fetch = (obj: Object): Object => {\r\n  if (\r\n    typeof obj === \"string\" &&\r\n    obj.startsWith(\"__func_\") &&\r\n    obj.endsWith(\"__\")\r\n  ) {\r\n    return FunctionManager.collection.retrive(obj);\r\n  } else if (Array.isArray(obj)) {\r\n    return obj.map(FunctionManager.fetch);\r\n  } else if (obj !== null && typeof obj === \"object\") {\r\n    return Object.keys(obj).reduce<{ [key: string]: Object }>((acc, key) => {\r\n      //@ts-ignore\r\n      acc[key] = FunctionManager.fetch(obj[key]);\r\n      return acc;\r\n    }, {});\r\n  }\r\n  return obj;\r\n};\r\n","import { set } from \"js-upsert\";\r\nimport { FunctionManager } from \"../core/managers/FunctionManager\";\r\n\r\nexport function setFun<T>(value: T) {\r\n  return set<T>(() => FunctionManager.store(value) as T);\r\n}\r\n","import { set as jsSet, SetValueSignature } from \"js-upsert\";\r\nimport { setFun } from \"./setFun\";\r\n\r\ntype setType = {\r\n  <T>(value: T | ((prevValue: T) => T)): SetValueSignature<T>;\r\n  fun: <T>(fun: T) => SetValueSignature<T>;\r\n};\r\n\r\nexport const set = jsSet as unknown as setType;\r\n\r\nset.fun = setFun;\r\n","import { useThis_Instance } from \"../../useThis/useThisTypes\";\r\n\r\n/*\r\n\r\n\r\n  useThis-Effect\r\n\r\n  Idea: Execute a function on change of state\r\n\r\n  Initialization Flow:-\r\n\r\n  1. UseThis Dispatcher providing a reducer `EffectReducer` to useThis\r\n  2. On Initialisation of useThis(state_name) having a effect(effect_fun, dependent_state), effect is getting registered at a `effect_collection` \r\n  \r\n\r\n  Working Flow:-\r\n\r\n  All state dispatchers are having hook `executeEffects` to execute effect which is having dependency of current state. \r\n\r\n\r\n*/\r\nconst effect_collection: {\r\n  dependent_state: {\r\n    [state_id: string]: string[];\r\n  };\r\n  effects: {\r\n    [process_id: string]: Function;\r\n  };\r\n  registeredStates: { [state_name: string]: boolean };\r\n  registeredProcess: { [process_id: number]: string };\r\n  resolved: { [state_name: string]: boolean };\r\n  registeredDependency: { [state_name: string]: string[] };\r\n} = {\r\n  dependent_state: {},\r\n  effects: {},\r\n  registeredStates: {},\r\n  resolved: {},\r\n  registeredProcess: {},\r\n  registeredDependency: {},\r\n};\r\n\r\n/**\r\n *\r\n * @param props\r\n * @param props.state_name State name which is dispatching a effect fn\r\n * @param props.dependent_state_names Names of state which will execute effect fn on change\r\n * @param props.effect Effect Fn provided by user\r\n * @returns\r\n */\r\n\r\nexport function registerEffect(props: {\r\n  state_name: string;\r\n  effect: Function;\r\n  dependent_state_names: (string | useThis_Instance<unknown>)[];\r\n}) {\r\n  const { state_name, effect, dependent_state_names } = props;\r\n\r\n  if (\r\n    !Array.isArray(dependent_state_names) ||\r\n    dependent_state_names.length === 0\r\n  )\r\n    throw TypeError(\r\n      \"Second parameter of effect `dependent_states` must be a non-empty array.\"\r\n    );\r\n\r\n  // Check if state is already registered its effect or not\r\n\r\n  if (effect_collection.registeredStates?.[state_name]) return;\r\n\r\n  // Register a statename, to prevent re-rendering on next load\r\n\r\n  const process_id = state_name;\r\n\r\n  // Register proccess and state\r\n  effect_collection.registeredStates[state_name] = true;\r\n\r\n  // Iterate `dependent_state_names` and execute effects of each states\r\n\r\n  for (let dependent_state of dependent_state_names) {\r\n    if (\r\n      typeof dependent_state == \"function\" &&\r\n      //@ts-ignore\r\n      dependent_state?.[\"@___usethis\"] &&\r\n      dependent_state?.[\"this\"]\r\n    ) {\r\n      dependent_state = dependent_state[\"this\"];\r\n    }\r\n    if (typeof dependent_state === \"string\") {\r\n      // Verifing If dependent state registerd in collection or not, And appending new process_id to dependent_state\r\n\r\n      if (effect_collection.dependent_state?.[dependent_state]) {\r\n        effect_collection.dependent_state[dependent_state] = [\r\n          ...effect_collection.dependent_state[dependent_state],\r\n          process_id,\r\n        ];\r\n      } else {\r\n        effect_collection.dependent_state[dependent_state] = [process_id];\r\n      }\r\n\r\n      // Store decoded dependent state\r\n      effect_collection.registeredDependency[state_name] = [\r\n        ...(effect_collection.registeredDependency[state_name] ?? []),\r\n        dependent_state,\r\n      ];\r\n    } else {\r\n      throw TypeError(\r\n        \"Invalid type passed on `dependent_states`, Only string and useThis instance supported \"\r\n      );\r\n    }\r\n\r\n    // Storing effect fun in effects collection via process_id\r\n\r\n    effect_collection.effects[process_id] = effect;\r\n  }\r\n\r\n  // effect(() => deleteEffect({ state_name }));\r\n  console.log(effect_collection);\r\n}\r\n\r\n/*\r\n  ExecuteEffects is a dispatch hook, whenver dispatch fired, executeEffects fired after it.\r\n  It re-executes fired-state's all assigned processes\r\n*/\r\nexport function executeEffects(state_name: string) {\r\n  // Check if state is having any assigned effects or not\r\n\r\n  if (effect_collection.dependent_state?.[state_name]) {\r\n    // Execute all assigned process\r\n    for (const process_id of effect_collection.dependent_state[state_name]) {\r\n      try {\r\n        //  Executing the process function associated with process_id and passing resolveEffect\r\n        effect_collection.effects[process_id](() =>\r\n          resolveEffect({\r\n            dependent_state_name: state_name, // State which is dependent to process_id\r\n            state_name: process_id,\r\n          })\r\n        );\r\n      } catch (e) {\r\n        // Handle the error\r\n      }\r\n    }\r\n  }\r\n}\r\nexport function resolveEffect(props: {\r\n  dependent_state_name: string;\r\n  state_name: string;\r\n}) {\r\n  const { dependent_state_name, state_name } = props;\r\n  effect_collection.dependent_state[dependent_state_name] =\r\n    effect_collection.dependent_state[dependent_state_name].filter(\r\n      (item) => item !== state_name\r\n    );\r\n\r\n  delete effect_collection.effects[state_name];\r\n\r\n  effect_collection.resolved[state_name] = true;\r\n}\r\nexport function deleteEffect(props: { state_name: string }) {\r\n  let { state_name } = props;\r\n\r\n  // Iterate all registered process and remove states from dependency\r\n  for (let dependent_state of effect_collection.registeredDependency[\r\n    state_name\r\n  ]) {\r\n    effect_collection.dependent_state[dependent_state] =\r\n      effect_collection.dependent_state[dependent_state].filter(\r\n        (state) => state !== state_name\r\n      );\r\n  }\r\n  delete effect_collection.effects[state_name];\r\n  effect_collection.resolved[state_name] = true;\r\n}\r\n\r\nexport function getEffects() {\r\n  return effect_collection;\r\n}\r\n","import { upsert as up } from \"js-upsert\";\r\nimport { StateHandler } from \"../redux/slices/StateReducer\";\r\nimport _MAINSTORE, { StoreState } from \"../redux/store\";\r\nimport { useThisReturnType } from \"../useThis/useThisTypes\";\r\nimport { FunctionManager } from \"./managers/FunctionManager\";\r\n\r\n/*\r\n\r\n  These are reducers of useThis, for dispatching updating a state\r\n\r\n*/\r\n\r\nexport function Updater(StateName: keyof StoreState[\"This\"], dispatcher: any) {\r\n  return function update(data: any) {\r\n    let __DATA =\r\n      typeof data == \"function\"\r\n        ? data(_MAINSTORE.getState().This[StateName])\r\n        : data;\r\n\r\n    dispatcher(\r\n      StateHandler.update({\r\n        data: __DATA,\r\n        state: StateName,\r\n      })\r\n    );\r\n    return _MAINSTORE.getState().This[StateName];\r\n  };\r\n}\r\n\r\nexport function Appender(\r\n  StateName: keyof StoreState[\"This\"],\r\n  dispatcher: any\r\n): useThisReturnType<keyof StoreState[\"This\"]>[\"append\"] {\r\n  return function append(data) {\r\n    let __DATA =\r\n      typeof data == \"function\"\r\n        ? data(_MAINSTORE.getState().This[StateName])\r\n        : data;\r\n    dispatcher(\r\n      StateHandler.append({\r\n        data: __DATA,\r\n        state: StateName,\r\n      })\r\n    );\r\n    return _MAINSTORE.getState().This[StateName];\r\n  };\r\n}\r\n\r\nexport function Upsert(StateName: keyof StoreState[\"This\"], dispatcher: any) {\r\n  const main_state = _MAINSTORE?.getState()?.This[StateName];\r\n\r\n  function updater(data: any) {\r\n    try {\r\n      const haystack = Array.isArray(main_state)\r\n        ? [...main_state]\r\n        : { ...((main_state ?? {}) as object) };\r\n      dispatcher(\r\n        StateHandler.upsert({\r\n          data: up(haystack, data),\r\n          active_state: StateName,\r\n          config: {},\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const upsert = (\r\n    ...data: any\r\n  ): useThisReturnType<keyof StoreState[\"This\"]>[\"upsert\"] => {\r\n    for (let i of data) {\r\n      updater(i);\r\n    }\r\n    return _MAINSTORE.getState().This[StateName];\r\n  };\r\n\r\n  upsert.at = (...keys: [...(string | number)[], unknown]) => {\r\n    const haystack = Array.isArray(main_state)\r\n      ? [...main_state]\r\n      : { ...((main_state ?? {}) as object) };\r\n\r\n    dispatcher(\r\n      StateHandler.upsert({\r\n        data: up(haystack).at(...keys),\r\n        active_state: StateName,\r\n        config: {},\r\n      })\r\n    );\r\n    return _MAINSTORE.getState().This[StateName];\r\n  };\r\n  upsert.funAt = (...keys: [...(string | number)[], void]) => {\r\n    const haystack = Array.isArray(main_state)\r\n      ? [...main_state]\r\n      : { ...((main_state ?? {}) as object) };\r\n\r\n    const value = FunctionManager.store(keys[keys.length - 1]);\r\n\r\n    keys.pop();\r\n\r\n    const new_at_path = [...keys, value];\r\n    dispatcher(\r\n      StateHandler.upsert({\r\n        data: up(haystack).at(\r\n          ...(new_at_path as [...(string | number)[], void])\r\n        ),\r\n        active_state: StateName,\r\n        config: {},\r\n      })\r\n    );\r\n    return _MAINSTORE.getState().This[StateName];\r\n  };\r\n\r\n  return upsert;\r\n}\r\n","import { StateHandler } from \"../redux/slices/StateReducer\";\r\nimport _MAINSTORE, { StoreState } from \"../redux/store\";\r\nimport { useThisReturnType } from \"../useThis/useThisTypes\";\r\nimport { executeEffects, getEffects } from \"./managers/EffectManager\";\r\nimport { FunctionManager } from \"./managers/FunctionManager\";\r\nimport { Appender, Updater, Upsert } from \"./Reducers\";\r\n\r\nexport const useThisDispatcher = (StateName: string, defaultValue: any) => {\r\n  const redux_dispatcher = _MAINSTORE.dispatch;\r\n  const dispatcher = (param: any) => {\r\n    const r = redux_dispatcher(param);\r\n\r\n    // Execute all exisiting effects which is dependent on given state\r\n\r\n    executeEffects(StateName);\r\n    return r;\r\n  };\r\n  const requestedStateName = StateName as keyof StoreState[\"This\"];\r\n  const state_data = _MAINSTORE.getState()?.This;\r\n  if (\r\n    !state_data[requestedStateName] &&\r\n    defaultValue &&\r\n    !getEffects().resolved[requestedStateName]\r\n  ) {\r\n    dispatcher(\r\n      StateHandler.update({\r\n        data: defaultValue,\r\n        state: requestedStateName,\r\n      })\r\n    );\r\n  }\r\n\r\n  const useThisReturn = {\r\n    update: Updater(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"update\"],\r\n    append: Appender(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"append\"],\r\n    upsert: Upsert(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"upsert\"],\r\n    dispatcher: dispatcher,\r\n    This: _MAINSTORE.getState().This[requestedStateName],\r\n    get: () =>\r\n      _MAINSTORE.getState().This[\r\n        requestedStateName\r\n      ] as unknown as useThisReturnType<StoreState[\"This\"]>[\"get\"],\r\n    fetch: () =>\r\n      FunctionManager.fetch(\r\n        _MAINSTORE.getState().This[requestedStateName]\r\n      ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"fetch\"],\r\n  };\r\n\r\n  return useThisReturn as useThisReturnType<StoreState[\"This\"]>;\r\n};\r\nexport const useThisInstanceDispatcher = (StateName: string) => {\r\n  const redux_dispatcher = _MAINSTORE.dispatch;\r\n  const dispatcher = (param: any) => {\r\n    const r = redux_dispatcher(param);\r\n\r\n    // Execute all exisiting effects which is dependent on given state\r\n    executeEffects(StateName);\r\n    return r;\r\n  };\r\n  const requestedStateName = StateName as keyof StoreState[\"This\"];\r\n\r\n  const useThisReturn = {\r\n    update: Updater(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"update\"],\r\n    append: Appender(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"append\"],\r\n    upsert: Upsert(\r\n      requestedStateName,\r\n      dispatcher\r\n    ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"upsert\"],\r\n    dispatcher: dispatcher,\r\n    This: _MAINSTORE.getState().This[requestedStateName],\r\n    get: () =>\r\n      _MAINSTORE.getState().This[\r\n        requestedStateName\r\n      ] as unknown as useThisReturnType<StoreState[\"This\"]>[\"get\"],\r\n    fetch: () =>\r\n      FunctionManager.fetch(\r\n        _MAINSTORE.getState().This[requestedStateName]\r\n      ) as unknown as useThisReturnType<StoreState[\"This\"]>[\"fetch\"],\r\n  };\r\n\r\n  return {\r\n    ...useThisReturn,\r\n  } as useThisReturnType<StoreState[\"This\"]>;\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { useThisInstanceDispatcher } from \"../core/Dispatcher\";\r\nimport { registerEffect } from \"../core/managers/EffectManager\";\r\nimport { StateHandler } from \"../redux/slices/StateReducer\";\r\nimport _MAINSTORE, { StoreState } from \"../redux/store\";\r\nimport { useThis_this_instance, useThisInstanceType } from \"./useThisTypes\";\r\nexport function useThisInstanceReturn(prop1: unknown) {\r\n  const instance_data: useThis_this_instance = {\r\n    created: false,\r\n    stateName: \"state_\" + Math.floor(100000 + Math.random() * 900000),\r\n  };\r\n\r\n  if (prop1 && typeof prop1 == \"object\") {\r\n    instance_data.defaultData = prop1;\r\n  }\r\n\r\n  const useThisInstance = <T,>() => {\r\n    if (!instance_data.created) {\r\n      throw Error(\"Cannot use useThis Instance without created\");\r\n    }\r\n\r\n    return useThisInstanceFunction<T>(instance_data.stateName);\r\n  };\r\n\r\n  useThisInstance[\"@___usethis\"] = __APP_VERSION__;\r\n  useThisInstance[\"this\"] = instance_data.stateName;\r\n\r\n  useThisInstance.onEffect = (resolver: any, dependent_states: any) => {\r\n    instance_data[\"onEffect\"] = {\r\n      resolver,\r\n      dependent_states,\r\n    };\r\n\r\n    return useThisInstance;\r\n  };\r\n  useThisInstance.stateName = (state_name: string) => {\r\n    instance_data[\"stateName\"] = state_name;\r\n\r\n    return useThisInstance;\r\n  };\r\n  useThisInstance.default = <T extends object>(object: T) => {\r\n    instance_data[\"defaultData\"] = object;\r\n\r\n    return useThisInstance as () => ReturnType<\r\n      typeof useThisInstanceFunction<T>\r\n    >;\r\n  };\r\n\r\n  useThisInstance.setConfig = <T extends keyof useThis_this_instance>(\r\n    config_name: T,\r\n    value: useThis_this_instance[T]\r\n  ) => {\r\n    instance_data[config_name] = value;\r\n    return useThisInstance;\r\n  };\r\n\r\n  useThisInstance.create = () => {\r\n    if (instance_data.created) return;\r\n    useThisInstance[\"this\"] = instance_data.stateName;\r\n\r\n    if (instance_data.defaultData) {\r\n      _MAINSTORE.dispatch(\r\n        StateHandler.update({\r\n          data: instance_data.defaultData,\r\n          state: instance_data.stateName,\r\n        })\r\n      );\r\n    }\r\n\r\n    if (instance_data.onEffect) {\r\n      registerEffect({\r\n        state_name: instance_data.stateName,\r\n        dependent_state_names: instance_data.onEffect.dependent_states ?? [],\r\n\r\n        // Effect is stored in effect_collection.effects.{process_id}, This will execute on effect condtion\r\n\r\n        effect: (effectResolver: Function) =>\r\n          instance_data.onEffect?.resolver({\r\n            thisState: _MAINSTORE.getState().This,\r\n            state: (\r\n              state_name:\r\n                | keyof StoreState[\"This\"]\r\n                | (Function & {\r\n                    this: keyof StoreState[\"This\"];\r\n                    \"@___usethis\": unknown;\r\n                  })\r\n            ) => {\r\n              if (typeof state_name == \"function\" && state_name[\"@___usethis\"])\r\n                return _MAINSTORE.getState().This[state_name.this];\r\n              return _MAINSTORE.getState().This[\r\n                state_name as keyof StoreState[\"This\"]\r\n              ];\r\n            },\r\n            resolver: () => {\r\n              _MAINSTORE.dispatch(\r\n                StateHandler.removeState({\r\n                  active_state: instance_data.stateName,\r\n                })\r\n              );\r\n              effectResolver();\r\n\r\n              instance_data.created = false;\r\n            },\r\n          }),\r\n      });\r\n    }\r\n\r\n    instance_data.created = true;\r\n\r\n    return useThisInstance;\r\n  };\r\n\r\n  useThisInstance.static = {\r\n    //@ts-ignore\r\n    get: () => _MAINSTORE.getState().This[useThisInstance[\"this\"] as string],\r\n  };\r\n  return useThisInstance;\r\n}\r\n\r\nfunction useThisInstanceFunction<DefaultValue>(\r\n  StateName: string\r\n): useThisInstanceType<DefaultValue> {\r\n  try {\r\n    useSelector((s: any) => s.This?.[StateName]);\r\n  } catch (e) {}\r\n\r\n  return useThisInstanceDispatcher(\r\n    StateName\r\n  ) as unknown as useThisInstanceType<DefaultValue>;\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useThisDispatcher } from \"../core/Dispatcher\";\r\nimport { useThisInstanceReturn } from \"./useThisInstance\";\r\nimport { useThisReturnType, useThisType } from \"./useThisTypes\";\r\n\r\nfunction useThisMainFunction<DefaultValue>(\r\n  StateName: string,\r\n  defaultValue?: DefaultValue\r\n): useThisReturnType<DefaultValue> {\r\n  try {\r\n    useSelector((s: any) => s.This?.[StateName]);\r\n  } catch (e) {}\r\n\r\n  return useThisDispatcher(\r\n    StateName,\r\n    defaultValue\r\n  ) as unknown as useThisReturnType<DefaultValue>;\r\n}\r\n\r\nfunction useThisBuilder(prop1: unknown, prop2: unknown) {\r\n  // Handling new Instance\r\n  if (new.target) {\r\n    return useThisInstanceReturn(prop1);\r\n  }\r\n\r\n  // Rtn useThis as it is\r\n  return useThisMainFunction(prop1 as string, prop2);\r\n}\r\n\r\nexport const useThis: useThisType = useThisBuilder as unknown as useThisType;\r\n"],"names":["h","e","c","t","r","o","y","n","l","f","s","i","p","a","_","b","function_collection","functionIdCounter","FunctionManager","func","id","obj","acc","key","setFun","value","set","jsSet","effect_collection","registerEffect","props","state_name","effect","dependent_state_names","_a","process_id","dependent_state","_b","executeEffects","resolveEffect","dependent_state_name","item","getEffects","Updater","StateName","dispatcher","data","__DATA","_MAINSTORE","StateHandler","Appender","Upsert","main_state","updater","haystack","up","upsert","keys","new_at_path","useThisDispatcher","defaultValue","redux_dispatcher","param","requestedStateName","useThisInstanceDispatcher","useThisInstanceReturn","prop1","instance_data","useThisInstance","useThisInstanceFunction","resolver","dependent_states","object","config_name","effectResolver","useSelector","useThisMainFunction","useThisBuilder","prop2","useThis"],"mappings":"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","x_google_ignoreList":[0]}