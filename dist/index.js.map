{"version":3,"file":"index.js","sources":["../src/useThis/useThis.ts","../src/getThis/getThis.ts"],"sourcesContent":["import { useContext } from \"react\";\r\nimport ThisContext from \"../thisContext/context\";\r\n\r\nexport function useThis(StateName: string) {\r\n  let context = useContext(ThisContext) as any;\r\n\r\n  return context(StateName);\r\n}\r\n","import { StateHandler } from \"../redux/slices/StateReducer\";\r\nimport _MAINSTORE from \"../redux/store\";\r\n\r\nexport function getThis(\r\n  STATE_NAME: string,\r\n  NEW_DATA?: { data?: any; type?: \"update\" | \"upsert\" }\r\n) {\r\n  if ((NEW_DATA?.data ?? null) === null)\r\n    return _MAINSTORE.getState().This[STATE_NAME] ?? null;\r\n\r\n  const Reducers = {\r\n    update: StateHandler.update({\r\n      data: NEW_DATA?.data ?? {},\r\n      state: STATE_NAME,\r\n    }),\r\n    upsert: StateHandler.upsert({\r\n      data: NEW_DATA?.data ?? {},\r\n      active_state: STATE_NAME,\r\n    }),\r\n  };\r\n\r\n  _MAINSTORE.dispatch(Reducers[NEW_DATA?.type ?? \"upsert\"]);\r\n  return _MAINSTORE.getState().This[STATE_NAME];\r\n}\r\n"],"names":["useThis","StateName","useContext","ThisContext","getThis","STATE_NAME","NEW_DATA","_MAINSTORE","Reducers","StateHandler"],"mappings":";;;AAGO,SAASA,EAAQC,GAAmB;AAGzC,SAFcC,EAAWC,CAAW,EAErBF,CAAS;AAC1B;ACJgB,SAAAG,EACdC,GACAC,GACA;AACK,QAAAA,KAAA,gBAAAA,EAAU,SAAQ,UAAU;AAC/B,WAAOC,EAAW,SAAW,EAAA,KAAKF,CAAU,KAAK;AAEnD,QAAMG,IAAW;AAAA,IACf,QAAQC,EAAa,OAAO;AAAA,MAC1B,OAAMH,KAAA,gBAAAA,EAAU,SAAQ,CAAC;AAAA,MACzB,OAAOD;AAAA,IAAA,CACR;AAAA,IACD,QAAQI,EAAa,OAAO;AAAA,MAC1B,OAAMH,KAAA,gBAAAA,EAAU,SAAQ,CAAC;AAAA,MACzB,cAAcD;AAAA,IAAA,CACf;AAAA,EAAA;AAGH,SAAAE,EAAW,SAASC,GAASF,KAAA,gBAAAA,EAAU,SAAQ,QAAQ,CAAC,GACjDC,EAAW,SAAA,EAAW,KAAKF,CAAU;AAC9C;"}