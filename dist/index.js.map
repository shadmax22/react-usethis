{"version":3,"file":"index.js","sources":["../src/useThisWithoutProvider/UTWP.tsx","../src/useThis/useThis.ts","../src/getThis/getThis.ts","../src/setFun/setFun.tsx"],"sourcesContent":["import _MAINSTORE, { StoreState } from \"../redux/store\";\r\nimport { __USETHIS_DISPATCHER } from \"../setter/utils/Dispatcher\";\r\n\r\nexport function UTWP(StateName: keyof StoreState[\"This\"], defaultValue: any) {\r\n  return __USETHIS_DISPATCHER(_MAINSTORE.dispatch, _MAINSTORE.getState(), {\r\n    type: \"without_provider\",\r\n  })(StateName, defaultValue);\r\n}\r\n","import { useContext } from \"react\";\r\nimport ThisContext from \"../thisContext/context\";\r\nimport { UTWP } from \"../useThisWithoutProvider/UTWP\";\r\nimport { StoreState } from \"../redux/store\";\r\n\r\nexport function useThis(\r\n  StateName: keyof StoreState[\"This\"],\r\n  defaultValue?: any\r\n) {\r\n  let context;\r\n  try {\r\n    context = useContext(ThisContext) as any;\r\n  } catch (e) {\r\n    context = null;\r\n  }\r\n\r\n  if (context === null) {\r\n    return UTWP(StateName, defaultValue);\r\n  }\r\n  return context(StateName, defaultValue);\r\n}\r\n","import _MAINSTORE, { StoreState } from \"../redux/store\";\r\nimport { UTWP } from \"../useThisWithoutProvider/UTWP\";\r\n\r\nexport function getThis(\r\n  StateName: keyof StoreState[\"This\"],\r\n  defaultValue?: any\r\n) {\r\n  return UTWP(StateName, defaultValue);\r\n}\r\n","import { replaceFunctionsWithIds } from \"../redux/middleware/function_presever\";\r\n\r\nfunction getArrayFromStringIndex(str: string) {\r\n  // Remove all brackets and quotes, then split by period\r\n  return str.replace(/[\\[\\]'\"]/g, \"\").split(\".\");\r\n}\r\n\r\nexport function setFun(value: any, index: any[] | null | string = null) {\r\n  let r = Math.floor(Math.random() * 100);\r\n\r\n  let indexParsed =\r\n    typeof index == \"string\" ? getArrayFromStringIndex(index) : index;\r\n  return {\r\n    [\"$$@@@@__upsert_hook_\" + r]: {\r\n      value: replaceFunctionsWithIds(value),\r\n      index: indexParsed,\r\n      isFunction: typeof value == \"function\",\r\n      valueType: \"function\",\r\n    },\r\n  };\r\n}\r\n"],"names":["UTWP","StateName","defaultValue","__USETHIS_DISPATCHER","_MAINSTORE","useThis","context","useContext","ThisContext","getThis","getArrayFromStringIndex","str","setFun","value","index","indexParsed","replaceFunctionsWithIds"],"mappings":";;;AAGgB,SAAAA,EAAKC,GAAqCC,GAAmB;AAC3E,SAAOC,EAAqBC,EAAW,UAAUA,EAAW,YAAY;AAAA,IACtE,MAAM;AAAA,EAAA,CACP,EAAEH,GAAWC,CAAY;AAC5B;ACFgB,SAAAG,EACdJ,GACAC,GACA;AACI,MAAAI;AACA,MAAA;AACF,IAAAA,IAAUC,EAAWC,CAAW;AAAA,UACtB;AACA,IAAAF,IAAA;AAAA,EACZ;AAEA,SAAIA,MAAY,OACPN,EAAKC,GAAWC,CAAY,IAE9BI,EAAQL,GAAWC,CAAY;AACxC;ACjBgB,SAAAO,EACdR,GACAC,GACA;AACO,SAAAF,EAAKC,GAAWC,CAAY;AACrC;ACNA,SAASQ,EAAwBC,GAAa;AAE5C,SAAOA,EAAI,QAAQ,aAAa,EAAE,EAAE,MAAM,GAAG;AAC/C;AAEgB,SAAAC,EAAOC,GAAYC,IAA+B,MAAM;AACtE,MAAI,IAAI,KAAK,MAAM,KAAK,OAAA,IAAW,GAAG,GAElCC,IACF,OAAOD,KAAS,WAAWJ,EAAwBI,CAAK,IAAIA;AACvD,SAAA;AAAA,IACL,CAAC,yBAAyB,CAAC,GAAG;AAAA,MAC5B,OAAOE,EAAwBH,CAAK;AAAA,MACpC,OAAOE;AAAA,MACP,YAAY,OAAOF,KAAS;AAAA,MAC5B,WAAW;AAAA,IACb;AAAA,EAAA;AAEJ;"}